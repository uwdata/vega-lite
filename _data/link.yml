# Use "" if there is a # in the url

# Spec
Spec:
  link: spec.html
CompositeUnitSpec:
  name: SingleViewSpec
  link: "spec.html#single"
ViewBackground:
  name: "spec.html#view-background"
LayerSpec:
  link: "layer.html"
AutoSizeParams:
  link: "size.html#autosize"

## Facet Spec
FacetMapping:
  link: "facet.html#mapping"
Header:
  link: "facet.html#header"

# Data
Data:
  link: "data.html"
DataFormat:
  link: "data.html#format"


# Title
TitleParams:
  link: "title.html#params"

# Transform
Transform:
  link: "transform.html"

AggregateOp:
  link: "aggregate.html#ops"
Bin:
  link: "bin.html"
BinParams:
  link: "bin.html#bin-parameters"
"LogicalOperand<Predicate>":
  link: "transform.html#predicate"
AggregateOpDef:
  link: "transform.html#aggregate-op-def"
TimeUnit:
  link: "timeunit.html"
LookupData:
  link: "lookup.html#lookup-data"
Window:
  link: "window.html"

# Transform - Impute
ImputeSequence:
  link: impute.html#sequence-def

# Transform - Time Unit
Month:
  name: Number
Day:
  name: Number

# Transform - Window
WindowFieldDef:
  link: "window.html#field-def"
SortField:
  link: "window.html#sort-field-def"
WindowOnlyOp:
  link: "window.html#ops"

# Mark
AnyMark:
  name: Mark
  link: mark.html

# Axes and Legends
SymbolShape:
  name: String
LabelOverlap:
  name: String

# Config
Config:
  link: "config.html"
AxisConfig:
  link: "axis.html#config"
LegendConfig:
  link: "legend.html#config"
MarkConfig:
  link: "mark.html#config"
BarConfig:
  link: "bar.html#config"
RangeConfig:
  link: "scale.html#range-config"
ScaleConfig:
  link: "scale.html#config"
ProjectionConfig:
  link: "projection.html#config"
SelectionConfig:
  link: "selection.html#config"
StyleConfigIndex:
  name: Object
TextConfig:
  link: "text.html#config"
TickConfig:
  link: "tick.html#config"
TitleConfig:
  link: "title.html#config"
ViewConfig:
  link: "spec.html#config"
CompositionConfig:
  link: "config.html#composition-config"

# Encoding
EncodingWithFacet:
  name: Encoding
  link: "encoding.html"
Type:
  link: type.html
SingleDefChannel:
  name: "Channel"
  link: "encoding.html#channels"
SingleDefUnitChannel:
  name: "Channel"
  link: "encoding.html#channels"

# Channel Definitions
ColorFieldDefWithCondition:
  name: MarkPropFieldDef
  link: "encoding.html#mark-prop-field-def"
ColorValueDefWithCondition:
  name: MarkPropValueDef
  link: "encoding.html#mark-prop-value-def"

NumericFieldDefWithCondition:
  name: MarkPropFieldDef
  link: "encoding.html#mark-prop-field-def"
NumericValueDefWithCondition:
  name: MarkPropValueDef
  link: "encoding.html#mark-prop-value-def"

StringFieldDefWithCondition:
  name: MarkPropFieldDef
  link: "encoding.html#mark-prop-field-def"
StringValueDefWithCondition:
  name: MarkPropValueDef
  link: "encoding.html#mark-prop-value-def"

ShapeFieldDefWithCondition:
  name: MarkPropFieldDef
  link: "encoding.html#mark-prop-field-def"
ShapeValueDefWithCondition:
  name: MarkPropValueDef
  link: "encoding.html#mark-prop-value-def"

TextFieldDefWithCondition:
  name: TextFieldDef
  link: "encoding.html#text-field-def"
TextValueDefWithCondition:
  name: TextValueDef
  link: "encoding.html#text-value-def"

FieldDefWithCondition:
  link: "encoding.html#href-field-def"
ValueDefWithCondition:
  link: "encoding.html#href-value-def"

ConditionalMarkPropFieldDef:
  name: ConditionalFieldDef
  link: "condition.html#field"
ConditionalTextFieldDef:
  name: ConditionFieldDef
  link: "condition.html#field"
ConditionalFieldDef:
  link: "condition.html#field"
ConditionalValueDef:
  link: "condition.html#value"

FieldDef:
  link: "encoding.html#field"
LatLongFieldDef:
  name: FieldDef
  link: "encoding.html#field"
SecondaryFieldDef:
  name: FieldDef
  link: "encoding.html#field"
FacetFieldDef:
  link: "facet.html#facet-field-definition"
OrderFieldDef:
  link: "encoding.html#order"
PositionFieldDef:
  link: "encoding.html#position-field-def"

ValueDef:
  link: "encoding.html#value"
NumberValueDef:
  name: ValueDef
  link: "encoding.html#value"
XValueDef:
  name: ValueDef
  link: "encoding.html#value"
YValueDef:
  name: ValueDef
  link: "encoding.html#value"
StringValueDef:
  name: ValueDef
  link: "encoding.html#value"

# Field Definition
Aggregate:
  link: "aggregate.html"
Axis:
  link: "axis.html"
Bin:
  link: "bin.html"
RepeatRef:
  link: "field.html#repeat-ref"
Legend:
  link: legend.html
Scale:
  link: "scale.html"
Sort:
  link: "sort.html"
EncodingSortField:
  link: "sort.html#sort-field"
StackOffset:
  link: "stack.html"

# Scale / Axis / Legend / Projection
ProjectionType:
  link: "projection.html#projection-types"
SchemeParams:
  link: "scale.html#scheme-params"
SelectionDomain:
  link: "selection.html#scale-domains"
InterpolateParams:
  name: Object
Scheme:
  link: "https://vega.github.io/vega/docs/schemes/#scheme-properties"

Resolve:
  name: Resolve
  link: "resolve.html"

# Selections
SelectionDef:
  name: Selection
  link: "selection.html"
SelectionOperand:
  name: "String | Object"
SingleSelectionConfig:
  name: Selection
  link: "selection.html#definition"
MultiSelectionConfig:
  name: Selection
  link: "selection.html#definition"
IntervalSelectionConfig:
  name: Selection
  link: "selection.html#definition"
BrushConfig:
  name: Mark
  link: "selection.html#interval-mark"
EventStream:
  name: "Vega Event Stream"
  link: "https://vega.github.io/vega/docs/event-streams/"
SelectionResolution:
  link: "selection.html#resolve"

# Types
DateTime:
  link: "types.html#datetime"
Color:
  link: "types.html#color"

# Others
FontWeight:
  name: "String | Number"
RepeatMapping:
  link: "repeat.html#repeat-mapping"
Padding:
  name: "Number | Object"
TextBaseline:
  name: String # we need to cast his as TextBaseline unions "alphabetic" with Baseline
