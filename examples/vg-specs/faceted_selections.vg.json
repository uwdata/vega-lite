{
    "$schema": "http://vega.github.io/schema/vega/v3.0.json",
    "autosize": "pad",
    "padding": 5,
    "signals": [
        {
            "name": "width",
            "update": "data('layout')[0].width"
        },
        {
            "name": "height",
            "update": "data('layout')[0].height"
        },
        {
            "name": "child_xenc_X",
            "value": "",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "mouseover"
                        }
                    ],
                    "update": "(item().isVoronoi ? datum.datum : datum)[\"X\"]"
                }
            ],
            "bind": {
                "input": "number"
            }
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "group()._id ? group() : unit"
                }
            ]
        },
        {
            "name": "child_grid_x"
        },
        {
            "name": "child_grid_y"
        },
        {
            "name": "child_xenc",
            "update": "data(\"child_xenc_store\")[0]"
        }
    ],
    "data": [
        {
            "name": "source_0",
            "url": "data/anscombe.json",
            "format": {
                "type": "json",
                "parse": {}
            },
            "transform": [
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"X\"])",
                    "as": "X"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"Y\"])",
                    "as": "Y"
                },
                {
                    "type": "filter",
                    "expr": "datum[\"X\"] !== null && !isNaN(datum[\"X\"]) && datum[\"Y\"] !== null && !isNaN(datum[\"Y\"])"
                }
            ]
        },
        {
            "name": "column",
            "source": "source_0",
            "transform": [
                {
                    "type": "aggregate",
                    "groupby": [
                        "Series"
                    ]
                }
            ]
        },
        {
            "name": "layout",
            "source": "source_0",
            "transform": [
                {
                    "type": "aggregate",
                    "fields": [
                        "Series"
                    ],
                    "ops": [
                        "distinct"
                    ]
                },
                {
                    "type": "formula",
                    "as": "child_width",
                    "expr": "200"
                },
                {
                    "type": "formula",
                    "as": "width",
                    "expr": "(datum[\"child_width\"] + 16) * datum[\"distinct_Series\"]"
                },
                {
                    "type": "formula",
                    "as": "child_height",
                    "expr": "200"
                },
                {
                    "type": "formula",
                    "as": "height",
                    "expr": "datum[\"child_height\"] + 16"
                }
            ]
        },
        {
            "name": "child_brush_store"
        },
        {
            "name": "child_grid_store"
        },
        {
            "name": "child_xenc_store"
        }
    ],
    "marks": [
        {
            "name": "main-group",
            "type": "group",
            "description": "Anscombe's Quartet",
            "from": {
                "data": "layout"
            },
            "encode": {
                "update": {
                    "width": {
                        "field": "width"
                    },
                    "height": {
                        "field": "height"
                    }
                }
            },
            "marks": [
                {
                    "name": "x-axes",
                    "type": "group",
                    "from": {
                        "data": "column"
                    },
                    "encode": {
                        "update": {
                            "width": {
                                "field": {
                                    "parent": "child_width"
                                }
                            },
                            "height": {
                                "field": {
                                    "group": "height"
                                }
                            },
                            "x": {
                                "scale": "column",
                                "field": "Series",
                                "offset": 8
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "x",
                            "format": "s",
                            "orient": "bottom",
                            "tickCount": 5,
                            "title": "X",
                            "zindex": 1
                        }
                    ]
                },
                {
                    "name": "y-axes",
                    "type": "group",
                    "encode": {
                        "update": {
                            "width": {
                                "field": {
                                    "group": "width"
                                }
                            },
                            "height": {
                                "field": {
                                    "parent": "child_height"
                                }
                            },
                            "y": {
                                "value": 8
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "format": "s",
                            "orient": "left",
                            "title": "Y",
                            "zindex": 1
                        }
                    ]
                },
                {
                    "name": "cell",
                    "type": "group",
                    "from": {
                        "facet": {
                            "name": "facet",
                            "data": "source_0",
                            "groupby": [
                                "Series"
                            ]
                        }
                    },
                    "encode": {
                        "update": {
                            "x": {
                                "scale": "column",
                                "field": "Series",
                                "offset": 8
                            },
                            "y": {
                                "value": 8
                            },
                            "width": {
                                "field": {
                                    "parent": "child_width"
                                }
                            },
                            "height": {
                                "field": {
                                    "parent": "child_height"
                                }
                            },
                            "stroke": {
                                "value": "#ccc"
                            },
                            "strokeWidth": {
                                "value": 1
                            },
                            "fill": {
                                "value": "transparent"
                            }
                        }
                    },
                    "signals": [
                        {
                            "name": "child_brush_x",
                            "value": [],
                            "on": [
                                {
                                    "events": {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "!event.item || (event.item && event.item.mark.name !== \"child_brush_brush\")"
                                        ]
                                    },
                                    "update": "invert(\"x\", [x(unit), x(unit)])"
                                },
                                {
                                    "events": {
                                        "source": "window",
                                        "type": "mousemove",
                                        "consume": true,
                                        "between": [
                                            {
                                                "source": "scope",
                                                "type": "mousedown",
                                                "filter": [
                                                    "!event.item || (event.item && event.item.mark.name !== \"child_brush_brush\")"
                                                ]
                                            },
                                            {
                                                "source": "window",
                                                "type": "mouseup"
                                            }
                                        ]
                                    },
                                    "update": "[child_brush_x[0], invert(\"x\", clamp(x(unit), 0, width))]"
                                },
                                {
                                    "events": {
                                        "signal": "child_brush_translate_delta"
                                    },
                                    "update": "clampRange([child_brush_translate_anchor.extent_x[0] + abs(span(child_brush_translate_anchor.extent_x)) * child_brush_translate_delta.x / child_brush_translate_anchor.width, child_brush_translate_anchor.extent_x[1] + abs(span(child_brush_translate_anchor.extent_x)) * child_brush_translate_delta.x / child_brush_translate_anchor.width], invert(\"x\", 0), invert(\"x\", unit.width))"
                                },
                                {
                                    "events": {
                                        "signal": "child_brush_zoom_delta"
                                    },
                                    "update": "clampRange([child_brush_zoom_anchor.x + (child_brush_x[0] - child_brush_zoom_anchor.x) * child_brush_zoom_delta, child_brush_zoom_anchor.x + (child_brush_x[1] - child_brush_zoom_anchor.x) * child_brush_zoom_delta], invert(\"x\", 0), invert(\"x\", unit.width))"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_size",
                            "value": [],
                            "on": [
                                {
                                    "events": {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "!event.item || (event.item && event.item.mark.name !== \"child_brush_brush\")"
                                        ]
                                    },
                                    "update": "{x: x(unit), y: y(unit), width: 0, height: 0}"
                                },
                                {
                                    "events": {
                                        "source": "window",
                                        "type": "mousemove",
                                        "consume": true,
                                        "between": [
                                            {
                                                "source": "scope",
                                                "type": "mousedown",
                                                "filter": [
                                                    "!event.item || (event.item && event.item.mark.name !== \"child_brush_brush\")"
                                                ]
                                            },
                                            {
                                                "source": "window",
                                                "type": "mouseup"
                                            }
                                        ]
                                    },
                                    "update": "{x: child_brush_size.x, y: child_brush_size.y, width: abs(x(unit) - child_brush_size.x), height: abs(y(unit) - child_brush_size.y)}"
                                },
                                {
                                    "events": {
                                        "signal": "child_brush_zoom_delta"
                                    },
                                    "update": "{x: child_brush_size.x, y: child_brush_size.y, width: child_brush_size.width * child_brush_zoom_delta , height: child_brush_size.height * child_brush_zoom_delta}"
                                }
                            ]
                        },
                        {
                            "name": "child_brush",
                            "update": "[{field: \"X\", extent: child_brush_x}]"
                        },
                        {
                            "name": "child_brush_translate_anchor",
                            "value": {},
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "markname": "child_brush_brush"
                                        }
                                    ],
                                    "update": "{x: x(unit), y: y(unit), width: child_brush_size.width, height: child_brush_size.height, extent_x: slice(child_brush_x), }"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_translate_delta",
                            "value": {},
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "window",
                                            "type": "mousemove",
                                            "consume": true,
                                            "between": [
                                                {
                                                    "source": "scope",
                                                    "type": "mousedown",
                                                    "markname": "child_brush_brush"
                                                },
                                                {
                                                    "source": "window",
                                                    "type": "mouseup"
                                                }
                                            ]
                                        }
                                    ],
                                    "update": "{x: x(unit) - child_brush_translate_anchor.x, y: y(unit) - child_brush_translate_anchor.y}"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_zoom_anchor",
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "wheel",
                                            "markname": "child_brush_brush"
                                        }
                                    ],
                                    "update": "{x: invert(\"x\", x(unit)), y: invert(\"y\", y(unit))}"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_zoom_delta",
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "wheel",
                                            "markname": "child_brush_brush"
                                        }
                                    ],
                                    "force": true,
                                    "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_tuple",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_brush"
                                    },
                                    "update": "{unit: unit.datum && unit.datum._id, intervals: child_brush}"
                                }
                            ]
                        },
                        {
                            "name": "child_brush_modify",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_brush"
                                    },
                                    "update": "modify(\"child_brush_store\", child_brush_tuple, {unit: child_brush_tuple.unit})"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_x",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_grid_translate_delta"
                                    },
                                    "update": "[child_grid_translate_anchor.extent_x[0] - abs(span(child_grid_translate_anchor.extent_x)) * child_grid_translate_delta.x / child_grid_translate_anchor.width, child_grid_translate_anchor.extent_x[1] - abs(span(child_grid_translate_anchor.extent_x)) * child_grid_translate_delta.x / child_grid_translate_anchor.width]"
                                },
                                {
                                    "events": {
                                        "signal": "child_grid_zoom_delta"
                                    },
                                    "update": "[child_grid_zoom_anchor.x + (domain(\"x\")[0] - child_grid_zoom_anchor.x) * child_grid_zoom_delta, child_grid_zoom_anchor.x + (domain(\"x\")[1] - child_grid_zoom_anchor.x) * child_grid_zoom_delta]"
                                }
                            ],
                            "push": "outer"
                        },
                        {
                            "name": "child_grid_y",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_grid_translate_delta"
                                    },
                                    "update": "[child_grid_translate_anchor.extent_y[0] + abs(span(child_grid_translate_anchor.extent_y)) * child_grid_translate_delta.y / child_grid_translate_anchor.height, child_grid_translate_anchor.extent_y[1] + abs(span(child_grid_translate_anchor.extent_y)) * child_grid_translate_delta.y / child_grid_translate_anchor.height]"
                                },
                                {
                                    "events": {
                                        "signal": "child_grid_zoom_delta"
                                    },
                                    "update": "[child_grid_zoom_anchor.y + (domain(\"y\")[0] - child_grid_zoom_anchor.y) * child_grid_zoom_delta, child_grid_zoom_anchor.y + (domain(\"y\")[1] - child_grid_zoom_anchor.y) * child_grid_zoom_delta]"
                                }
                            ],
                            "push": "outer"
                        },
                        {
                            "name": "child_grid",
                            "update": "[{field: \"X\", extent: child_grid_x}, {field: \"Y\", extent: child_grid_y}]"
                        },
                        {
                            "name": "child_grid_translate_anchor",
                            "value": {},
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "filter": [
                                                "event.shiftKey"
                                            ]
                                        }
                                    ],
                                    "update": "{x: x(unit), y: y(unit), width: unit.width, height: unit.height, extent_x: domain(\"x\"), extent_y: domain(\"y\"), }"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_translate_delta",
                            "value": {},
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "mousemove",
                                            "between": [
                                                {
                                                    "source": "scope",
                                                    "type": "mousedown",
                                                    "filter": [
                                                        "event.shiftKey"
                                                    ]
                                                },
                                                {
                                                    "source": "scope",
                                                    "type": "mouseup"
                                                }
                                            ]
                                        }
                                    ],
                                    "update": "{x: x(unit) - child_grid_translate_anchor.x, y: y(unit) - child_grid_translate_anchor.y}"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_zoom_anchor",
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "wheel"
                                        }
                                    ],
                                    "update": "{x: invert(\"x\", x(unit)), y: invert(\"y\", y(unit))}"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_zoom_delta",
                            "on": [
                                {
                                    "events": [
                                        {
                                            "source": "scope",
                                            "type": "wheel"
                                        }
                                    ],
                                    "force": true,
                                    "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_tuple",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_grid"
                                    },
                                    "update": "{unit: unit.datum && unit.datum._id, intervals: child_grid}"
                                }
                            ]
                        },
                        {
                            "name": "child_grid_modify",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_grid"
                                    },
                                    "update": "modify(\"child_grid_store\", child_grid_tuple, true)"
                                }
                            ]
                        },
                        {
                            "name": "child_xenc",
                            "update": "{fields: [\"X\"], values: [child_xenc_X]}"
                        },
                        {
                            "name": "child_xenc_tuple",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_xenc"
                                    },
                                    "update": "{unit: unit.datum && unit.datum._id, fields: child_xenc.fields, values: child_xenc.values, X: child_xenc.values[0]}"
                                }
                            ]
                        },
                        {
                            "name": "child_xenc_modify",
                            "on": [
                                {
                                    "events": {
                                        "signal": "child_xenc"
                                    },
                                    "update": "modify(\"child_xenc_store\", child_xenc_tuple, true)"
                                }
                            ]
                        }
                    ],
                    "marks": [
                        {
                            "type": "group",
                            "encode": {
                                "enter": {
                                    "width": {
                                        "field": {
                                            "group": "width"
                                        }
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "clip": {
                                        "value": true
                                    }
                                }
                            },
                            "marks": [
                                {
                                    "type": "rect",
                                    "encode": {
                                        "enter": {
                                            "fill": {
                                                "value": "#eee"
                                            }
                                        },
                                        "update": {
                                            "x": {
                                                "scale": "x",
                                                "signal": "child_brush[0].extent[0]"
                                            },
                                            "x2": {
                                                "scale": "x",
                                                "signal": "child_brush[0].extent[1]"
                                            },
                                            "y": {
                                                "value": 0
                                            },
                                            "y2": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "child_marks",
                                    "type": "symbol",
                                    "role": "circle",
                                    "from": {
                                        "data": "facet"
                                    },
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "scale": "x",
                                                "field": "X"
                                            },
                                            "y": {
                                                "scale": "y",
                                                "field": "Y"
                                            },
                                            "fill": [
                                                {
                                                    "test": "vlPoint(\"child_xenc_store\", parent._id, datum, \"union\", \"all\")",
                                                    "value": "red"
                                                },
                                                {
                                                    "value": "steelblue"
                                                }
                                            ],
                                            "size": [
                                                {
                                                    "test": "vlInterval(\"child_brush_store\", parent._id, datum, \"intersect\", \"all\")",
                                                    "value": 250
                                                },
                                                {
                                                    "value": 100
                                                }
                                            ],
                                            "shape": {
                                                "value": "circle"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "child_voronoi",
                                    "type": "path",
                                    "from": {
                                        "data": "child_marks"
                                    },
                                    "encode": {
                                        "enter": {
                                            "fill": {
                                                "value": "transparent"
                                            },
                                            "strokeWidth": {
                                                "value": 0.35
                                            },
                                            "stroke": {
                                                "value": "transparent"
                                            },
                                            "isVoronoi": {
                                                "value": true
                                            }
                                        }
                                    },
                                    "transform": [
                                        {
                                            "type": "voronoi",
                                            "x": "datum.x",
                                            "y": "datum.y",
                                            "size": [
                                                {
                                                    "signal": "width"
                                                },
                                                {
                                                    "signal": "height"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "child_brush_brush",
                                    "type": "rect",
                                    "encode": {
                                        "enter": {
                                            "fill": {
                                                "value": "transparent"
                                            }
                                        },
                                        "update": {
                                            "x": {
                                                "scale": "x",
                                                "signal": "child_brush[0].extent[0]"
                                            },
                                            "x2": {
                                                "scale": "x",
                                                "signal": "child_brush[0].extent[1]"
                                            },
                                            "y": {
                                                "value": 0
                                            },
                                            "y2": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "axes": [
                        {
                            "scale": "x",
                            "domain": false,
                            "format": "s",
                            "grid": true,
                            "labels": false,
                            "orient": "bottom",
                            "tickCount": 5,
                            "ticks": false,
                            "zindex": 0,
                            "gridScale": "y"
                        },
                        {
                            "scale": "y",
                            "domain": false,
                            "format": "s",
                            "grid": true,
                            "labels": false,
                            "orient": "left",
                            "ticks": false,
                            "zindex": 0,
                            "gridScale": "x"
                        }
                    ]
                }
            ],
            "scales": [
                {
                    "name": "column",
                    "type": "band",
                    "domain": {
                        "data": "source_0",
                        "field": "Series",
                        "sort": true
                    },
                    "range": "width",
                    "round": true
                },
                {
                    "name": "x",
                    "type": "linear",
                    "domain": {
                        "data": "source_0",
                        "field": "X"
                    },
                    "range": [
                        0,
                        200
                    ],
                    "round": true,
                    "nice": true,
                    "zero": false,
                    "domainRaw": {
                        "signal": "child_grid_x"
                    }
                },
                {
                    "name": "y",
                    "type": "linear",
                    "domain": {
                        "data": "source_0",
                        "field": "Y"
                    },
                    "range": [
                        200,
                        0
                    ],
                    "round": true,
                    "nice": true,
                    "zero": false,
                    "domainRaw": {
                        "signal": "child_grid_y"
                    }
                }
            ],
            "axes": [
                {
                    "scale": "column",
                    "domain": false,
                    "grid": false,
                    "orient": "top",
                    "ticks": false,
                    "title": "Series",
                    "zindex": 1
                }
            ]
        }
    ]
}