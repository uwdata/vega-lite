{
    "$schema": "http://vega.github.io/schema/vega/v3.0.json",
    "autosize": "pad",
    "padding": 5,
    "signals": [
        {
            "name": "width",
            "update": "data('layout')[0].width"
        },
        {
            "name": "height",
            "update": "data('layout')[0].height"
        },
        {
            "name": "layer_0_cyl_Cylinders",
            "value": "",
            "on": [
                {
                    "events": [
                        {
                            "source": "scope",
                            "type": "click"
                        }
                    ],
                    "update": "(item().isVoronoi ? datum.datum : datum)[\"Cylinders\"]"
                }
            ],
            "bind": {
                "input": "range",
                "min": 3,
                "max": 8,
                "step": 1
            }
        },
        {
            "name": "unit",
            "value": {},
            "on": [
                {
                    "events": "mousemove",
                    "update": "group()._id ? group() : unit"
                }
            ]
        },
        {
            "name": "layer_0_grid_x"
        },
        {
            "name": "layer_0_grid_y"
        },
        {
            "name": "layer_0_cyl",
            "update": "data(\"layer_0_cyl_store\")[0]"
        }
    ],
    "data": [
        {
            "name": "source_0",
            "url": "data/cars.json",
            "format": {
                "type": "json",
                "parse": {}
            }
        },
        {
            "name": "data_0",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"Horsepower\"])",
                    "as": "Horsepower"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"Miles_per_Gallon\"])",
                    "as": "Miles_per_Gallon"
                },
                {
                    "type": "filter",
                    "expr": "datum[\"Horsepower\"] !== null && !isNaN(datum[\"Horsepower\"]) && datum[\"Miles_per_Gallon\"] !== null && !isNaN(datum[\"Miles_per_Gallon\"])"
                }
            ]
        },
        {
            "name": "data_1",
            "source": "source_0",
            "transform": [
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"Horsepower\"])",
                    "as": "Horsepower"
                },
                {
                    "type": "formula",
                    "expr": "toNumber(datum[\"Miles_per_Gallon\"])",
                    "as": "Miles_per_Gallon"
                },
                {
                    "type": "filter",
                    "expr": "datum[\"Horsepower\"] !== null && !isNaN(datum[\"Horsepower\"]) && datum[\"Miles_per_Gallon\"] !== null && !isNaN(datum[\"Miles_per_Gallon\"])"
                }
            ]
        },
        {
            "name": "layout",
            "values": [
                {}
            ],
            "transform": [
                {
                    "type": "formula",
                    "as": "width",
                    "expr": "200"
                },
                {
                    "type": "formula",
                    "as": "height",
                    "expr": "200"
                }
            ]
        },
        {
            "name": "layer_0_grid_store"
        },
        {
            "name": "layer_0_cyl_store"
        },
        {
            "name": "layer_1_brush_store"
        }
    ],
    "marks": [
        {
            "name": "main-group",
            "type": "group",
            "description": "Drag out a rectangular brush to highlight points.",
            "from": {
                "data": "layout"
            },
            "encode": {
                "update": {
                    "width": {
                        "field": "width"
                    },
                    "height": {
                        "field": "height"
                    },
                    "fill": {
                        "value": "transparent"
                    }
                }
            },
            "signals": [
                {
                    "name": "layer_0_grid_x",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_grid_translate_delta"
                            },
                            "update": "[layer_0_grid_translate_anchor.extent_x[0] - abs(span(layer_0_grid_translate_anchor.extent_x)) * layer_0_grid_translate_delta.x / layer_0_grid_translate_anchor.width, layer_0_grid_translate_anchor.extent_x[1] - abs(span(layer_0_grid_translate_anchor.extent_x)) * layer_0_grid_translate_delta.x / layer_0_grid_translate_anchor.width]"
                        },
                        {
                            "events": {
                                "signal": "layer_0_grid_zoom_delta"
                            },
                            "update": "[layer_0_grid_zoom_anchor.x + (domain(\"x\")[0] - layer_0_grid_zoom_anchor.x) * layer_0_grid_zoom_delta, layer_0_grid_zoom_anchor.x + (domain(\"x\")[1] - layer_0_grid_zoom_anchor.x) * layer_0_grid_zoom_delta]"
                        }
                    ],
                    "push": "outer"
                },
                {
                    "name": "layer_0_grid_y",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_grid_translate_delta"
                            },
                            "update": "[layer_0_grid_translate_anchor.extent_y[0] + abs(span(layer_0_grid_translate_anchor.extent_y)) * layer_0_grid_translate_delta.y / layer_0_grid_translate_anchor.height, layer_0_grid_translate_anchor.extent_y[1] + abs(span(layer_0_grid_translate_anchor.extent_y)) * layer_0_grid_translate_delta.y / layer_0_grid_translate_anchor.height]"
                        },
                        {
                            "events": {
                                "signal": "layer_0_grid_zoom_delta"
                            },
                            "update": "[layer_0_grid_zoom_anchor.y + (domain(\"y\")[0] - layer_0_grid_zoom_anchor.y) * layer_0_grid_zoom_delta, layer_0_grid_zoom_anchor.y + (domain(\"y\")[1] - layer_0_grid_zoom_anchor.y) * layer_0_grid_zoom_delta]"
                        }
                    ],
                    "push": "outer"
                },
                {
                    "name": "layer_0_grid",
                    "update": "[{field: \"Horsepower\", extent: layer_0_grid_x}, {field: \"Miles_per_Gallon\", extent: layer_0_grid_y}]"
                },
                {
                    "name": "layer_0_grid_translate_anchor",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "!event.shiftKey"
                                    ]
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit), width: unit.width, height: unit.height, extent_x: domain(\"x\"), extent_y: domain(\"y\"), }"
                        }
                    ]
                },
                {
                    "name": "layer_0_grid_translate_delta",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousemove",
                                    "between": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "filter": [
                                                "!event.shiftKey"
                                            ]
                                        },
                                        {
                                            "source": "scope",
                                            "type": "mouseup"
                                        }
                                    ]
                                }
                            ],
                            "update": "{x: x(unit) - layer_0_grid_translate_anchor.x, y: y(unit) - layer_0_grid_translate_anchor.y}"
                        }
                    ]
                },
                {
                    "name": "layer_0_grid_zoom_anchor",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel"
                                }
                            ],
                            "update": "{x: invert(\"x\", x(unit)), y: invert(\"y\", y(unit))}"
                        }
                    ]
                },
                {
                    "name": "layer_0_grid_zoom_delta",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel"
                                }
                            ],
                            "force": true,
                            "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                        }
                    ]
                },
                {
                    "name": "layer_0_grid_tuple",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_grid"
                            },
                            "update": "{unit: unit.datum && unit.datum._id, intervals: layer_0_grid}"
                        }
                    ]
                },
                {
                    "name": "layer_0_grid_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_grid"
                            },
                            "update": "modify(\"layer_0_grid_store\", layer_0_grid_tuple, true)"
                        }
                    ]
                },
                {
                    "name": "layer_0_cyl",
                    "update": "{fields: [\"Cylinders\"], values: [layer_0_cyl_Cylinders]}"
                },
                {
                    "name": "layer_0_cyl_tuple",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_cyl"
                            },
                            "update": "{unit: unit.datum && unit.datum._id, fields: layer_0_cyl.fields, values: layer_0_cyl.values, Cylinders: layer_0_cyl.values[0]}"
                        }
                    ]
                },
                {
                    "name": "layer_0_cyl_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_0_cyl"
                            },
                            "update": "modify(\"layer_0_cyl_store\", layer_0_cyl_tuple, true)"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_x",
                    "value": [],
                    "on": [
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                ]
                            },
                            "update": "invert(\"x\", [x(unit), x(unit)])"
                        },
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousemove",
                                "between": [
                                    {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "event.shiftKey",
                                            "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                        ]
                                    },
                                    {
                                        "source": "scope",
                                        "type": "mouseup"
                                    }
                                ]
                            },
                            "update": "[layer_1_brush_x[0], invert(\"x\", clamp(x(unit), 0, width))]"
                        },
                        {
                            "events": {
                                "signal": "layer_1_brush_translate_delta"
                            },
                            "update": "clampRange([layer_1_brush_translate_anchor.extent_x[0] + abs(span(layer_1_brush_translate_anchor.extent_x)) * layer_1_brush_translate_delta.x / layer_1_brush_translate_anchor.width, layer_1_brush_translate_anchor.extent_x[1] + abs(span(layer_1_brush_translate_anchor.extent_x)) * layer_1_brush_translate_delta.x / layer_1_brush_translate_anchor.width], invert(\"x\", 0), invert(\"x\", unit.width))"
                        },
                        {
                            "events": {
                                "signal": "layer_1_brush_zoom_delta"
                            },
                            "update": "clampRange([layer_1_brush_zoom_anchor.x + (layer_1_brush_x[0] - layer_1_brush_zoom_anchor.x) * layer_1_brush_zoom_delta, layer_1_brush_zoom_anchor.x + (layer_1_brush_x[1] - layer_1_brush_zoom_anchor.x) * layer_1_brush_zoom_delta], invert(\"x\", 0), invert(\"x\", unit.width))"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_y",
                    "value": [],
                    "on": [
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                ]
                            },
                            "update": "invert(\"y\", [y(unit), y(unit)])"
                        },
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousemove",
                                "between": [
                                    {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "event.shiftKey",
                                            "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                        ]
                                    },
                                    {
                                        "source": "scope",
                                        "type": "mouseup"
                                    }
                                ]
                            },
                            "update": "[layer_1_brush_y[0], invert(\"y\", clamp(y(unit), 0, height))]"
                        },
                        {
                            "events": {
                                "signal": "layer_1_brush_translate_delta"
                            },
                            "update": "clampRange([layer_1_brush_translate_anchor.extent_y[0] - abs(span(layer_1_brush_translate_anchor.extent_y)) * layer_1_brush_translate_delta.y / layer_1_brush_translate_anchor.height, layer_1_brush_translate_anchor.extent_y[1] - abs(span(layer_1_brush_translate_anchor.extent_y)) * layer_1_brush_translate_delta.y / layer_1_brush_translate_anchor.height], invert(\"y\", unit.height), invert(\"y\", 0))"
                        },
                        {
                            "events": {
                                "signal": "layer_1_brush_zoom_delta"
                            },
                            "update": "clampRange([layer_1_brush_zoom_anchor.y + (layer_1_brush_y[0] - layer_1_brush_zoom_anchor.y) * layer_1_brush_zoom_delta, layer_1_brush_zoom_anchor.y + (layer_1_brush_y[1] - layer_1_brush_zoom_anchor.y) * layer_1_brush_zoom_delta], invert(\"y\", unit.height), invert(\"y\", 0))"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_size",
                    "value": [],
                    "on": [
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousedown",
                                "filter": [
                                    "event.shiftKey",
                                    "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                ]
                            },
                            "update": "{x: x(unit), y: y(unit), width: 0, height: 0}"
                        },
                        {
                            "events": {
                                "source": "scope",
                                "type": "mousemove",
                                "between": [
                                    {
                                        "source": "scope",
                                        "type": "mousedown",
                                        "filter": [
                                            "event.shiftKey",
                                            "!event.item || (event.item && event.item.mark.name !== \"layer_1_brush_brush\")"
                                        ]
                                    },
                                    {
                                        "source": "scope",
                                        "type": "mouseup"
                                    }
                                ]
                            },
                            "update": "{x: layer_1_brush_size.x, y: layer_1_brush_size.y, width: abs(x(unit) - layer_1_brush_size.x), height: abs(y(unit) - layer_1_brush_size.y)}"
                        },
                        {
                            "events": {
                                "signal": "layer_1_brush_zoom_delta"
                            },
                            "update": "{x: layer_1_brush_size.x, y: layer_1_brush_size.y, width: layer_1_brush_size.width * layer_1_brush_zoom_delta , height: layer_1_brush_size.height * layer_1_brush_zoom_delta}"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush",
                    "update": "[{field: \"Horsepower\", extent: layer_1_brush_x}, {field: \"Miles_per_Gallon\", extent: layer_1_brush_y}]"
                },
                {
                    "name": "layer_1_brush_translate_anchor",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousedown",
                                    "filter": [
                                        "event.shiftKey"
                                    ],
                                    "markname": "layer_1_brush_brush"
                                }
                            ],
                            "update": "{x: x(unit), y: y(unit), width: layer_1_brush_size.width, height: layer_1_brush_size.height, extent_x: slice(layer_1_brush_x), extent_y: slice(layer_1_brush_y), }"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_translate_delta",
                    "value": {},
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "mousemove",
                                    "between": [
                                        {
                                            "source": "scope",
                                            "type": "mousedown",
                                            "filter": [
                                                "event.shiftKey"
                                            ],
                                            "markname": "layer_1_brush_brush"
                                        },
                                        {
                                            "source": "scope",
                                            "type": "mouseup"
                                        }
                                    ]
                                }
                            ],
                            "update": "{x: x(unit) - layer_1_brush_translate_anchor.x, y: y(unit) - layer_1_brush_translate_anchor.y}"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_zoom_anchor",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "markname": "layer_1_brush_brush"
                                }
                            ],
                            "update": "{x: invert(\"x\", x(unit)), y: invert(\"y\", y(unit))}"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_zoom_delta",
                    "on": [
                        {
                            "events": [
                                {
                                    "source": "scope",
                                    "type": "wheel",
                                    "markname": "layer_1_brush_brush"
                                }
                            ],
                            "force": true,
                            "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_tuple",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_1_brush"
                            },
                            "update": "{unit: unit.datum && unit.datum._id, intervals: layer_1_brush}"
                        }
                    ]
                },
                {
                    "name": "layer_1_brush_modify",
                    "on": [
                        {
                            "events": {
                                "signal": "layer_1_brush"
                            },
                            "update": "modify(\"layer_1_brush_store\", layer_1_brush_tuple, true)"
                        }
                    ]
                }
            ],
            "marks": [
                {
                    "type": "group",
                    "encode": {
                        "enter": {
                            "width": {
                                "field": {
                                    "group": "width"
                                }
                            },
                            "height": {
                                "field": {
                                    "group": "height"
                                }
                            },
                            "fill": {
                                "value": "transparent"
                            },
                            "clip": {
                                "value": true
                            }
                        }
                    },
                    "marks": [
                        {
                            "type": "rect",
                            "encode": {
                                "enter": {
                                    "fill": {
                                        "value": "#eee"
                                    }
                                },
                                "update": {
                                    "x": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "x",
                                            "signal": "layer_1_brush[0].extent[0]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "x2": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "x",
                                            "signal": "layer_1_brush[0].extent[1]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "y": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "y",
                                            "signal": "layer_1_brush[1].extent[0]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "y2": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "y",
                                            "signal": "layer_1_brush[1].extent[1]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "layer_0_marks",
                            "type": "symbol",
                            "role": "point",
                            "from": {
                                "data": "data_0"
                            },
                            "encode": {
                                "update": {
                                    "x": {
                                        "scale": "x",
                                        "field": "Horsepower"
                                    },
                                    "y": {
                                        "scale": "y",
                                        "field": "Miles_per_Gallon"
                                    },
                                    "stroke": [
                                        {
                                            "test": "vlInterval(\"layer_1_brush_store\", parent._id, datum, \"union\", \"all\")",
                                            "value": "grey"
                                        },
                                        {
                                            "scale": "color",
                                            "field": "Cylinders"
                                        }
                                    ],
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "size": {
                                        "value": 100
                                    },
                                    "opacity": {
                                        "value": 0.7
                                    }
                                }
                            }
                        },
                        {
                            "name": "layer_1_marks",
                            "type": "symbol",
                            "role": "square",
                            "from": {
                                "data": "data_1"
                            },
                            "encode": {
                                "update": {
                                    "x": {
                                        "scale": "x",
                                        "field": "Horsepower"
                                    },
                                    "y": {
                                        "scale": "y",
                                        "field": "Miles_per_Gallon"
                                    },
                                    "fill": [
                                        {
                                            "test": "!vlInterval(\"layer_1_brush_store\", parent._id, datum, \"union\", \"all\")",
                                            "value": "grey"
                                        },
                                        {
                                            "scale": "color",
                                            "field": "Cylinders"
                                        }
                                    ],
                                    "size": [
                                        {
                                            "test": "vlPoint(\"layer_0_cyl_store\", parent._id, datum, \"union\", \"all\")",
                                            "value": 150
                                        },
                                        {
                                            "value": 50
                                        }
                                    ],
                                    "shape": {
                                        "value": "square"
                                    },
                                    "opacity": {
                                        "value": 0.7
                                    }
                                }
                            }
                        },
                        {
                            "name": "layer_1_brush_brush",
                            "type": "rect",
                            "encode": {
                                "enter": {
                                    "fill": {
                                        "value": "transparent"
                                    }
                                },
                                "update": {
                                    "x": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "x",
                                            "signal": "layer_1_brush[0].extent[0]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "x2": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "x",
                                            "signal": "layer_1_brush[0].extent[1]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "y": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "y",
                                            "signal": "layer_1_brush[1].extent[0]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ],
                                    "y2": [
                                        {
                                            "test": "data(\"layer_1_brush_store\").length && layer_1_brush_tuple && layer_1_brush_tuple.unit === data(\"layer_1_brush_store\")[0].unit",
                                            "scale": "y",
                                            "signal": "layer_1_brush[1].extent[1]"
                                        },
                                        {
                                            "value": 0
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            ],
            "scales": [
                {
                    "name": "x",
                    "type": "linear",
                    "domain": {
                        "fields": [
                            {
                                "data": "data_0",
                                "field": "Horsepower"
                            },
                            {
                                "data": "data_1",
                                "field": "Horsepower"
                            }
                        ],
                        "sort": true
                    },
                    "range": [
                        0,
                        200
                    ],
                    "round": true,
                    "nice": true,
                    "zero": true,
                    "domainRaw": {
                        "signal": "layer_0_grid_x"
                    }
                },
                {
                    "name": "y",
                    "type": "linear",
                    "domain": {
                        "fields": [
                            {
                                "data": "data_0",
                                "field": "Miles_per_Gallon"
                            },
                            {
                                "data": "data_1",
                                "field": "Miles_per_Gallon"
                            }
                        ],
                        "sort": true
                    },
                    "range": [
                        200,
                        0
                    ],
                    "round": true,
                    "nice": true,
                    "zero": true,
                    "domainRaw": {
                        "signal": "layer_0_grid_y"
                    }
                },
                {
                    "name": "color",
                    "type": "ordinal",
                    "domain": {
                        "fields": [
                            {
                                "data": "data_0",
                                "field": "Cylinders"
                            },
                            {
                                "data": "data_1",
                                "field": "Cylinders"
                            }
                        ],
                        "sort": true
                    },
                    "range": "ordinal"
                }
            ],
            "axes": [
                {
                    "scale": "x",
                    "format": "s",
                    "orient": "bottom",
                    "tickCount": 5,
                    "title": "Horsepower",
                    "zindex": 1
                },
                {
                    "scale": "x",
                    "domain": false,
                    "format": "s",
                    "grid": true,
                    "labels": false,
                    "orient": "bottom",
                    "tickCount": 5,
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "y"
                },
                {
                    "scale": "y",
                    "format": "s",
                    "orient": "left",
                    "title": "Miles_per_Gallon",
                    "zindex": 1
                },
                {
                    "scale": "y",
                    "domain": false,
                    "format": "s",
                    "grid": true,
                    "labels": false,
                    "orient": "left",
                    "ticks": false,
                    "zindex": 0,
                    "gridScale": "x"
                }
            ],
            "legends": [
                {
                    "stroke": "color",
                    "title": "Cylinders"
                }
            ]
        }
    ]
}