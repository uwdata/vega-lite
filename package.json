{
  "name": "vega-lite",
  "author": "Dominik Moritz, Kanit \"Ham\" Wongsuphasawat, Arvind Satyanarayan, Jeffrey Heer",
  "version": "4.0.2",
  "collaborators": [
    "Kanit Wongsuphasawat (http://kanitw.yellowpigz.com)",
    "Dominik Moritz (https://www.domoritz.de)",
    "Arvind Satyanarayan (https://arvindsatya.com)",
    "Jeffrey Heer (https://jheer.org)"
  ],
  "homepage": "https://vega.github.io/vega-lite/",
  "description": "Vega-Lite is a concise high-level language for interactive visualization.",
  "main": "build/vega-lite.js",
  "unpkg": "build/vega-lite.min.js",
  "jsdelivr": "build/vega-lite.min.js",
  "module": "build/src/index",
  "types": "build/src/index.d.ts",
  "bin": {
    "vl2png": "./bin/vl2png",
    "vl2svg": "./bin/vl2svg",
    "vl2vg": "./bin/vl2vg"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "build": "yarn build:only",
    "build:only": "yarn tsc:src && rollup -c",
    "postbuild": "terser build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && yarn schema",
    "prebuild:examples": "yarn build:only",
    "build:examples": "yarn data && TZ=America/Los_Angeles scripts/build-examples.sh",
    "prebuild:examples-full": "yarn build:only",
    "build:examples-full": "TZ=America/Los_Angeles scripts/build-examples.sh 1",
    "build:example": "TZ=America/Los_Angeles scripts/build-example.sh",
    "build:toc": "yarn build:jekyll && scripts/generate-toc",
    "build:site": "yarn tsc:site && rollup -c site/rollup.config.js",
    "build:jekyll": "pushd site && bundle exec jekyll build -q && popd",
    "build:versions": "scripts/update-version.sh",
    "clean": "find build ! -name 'vega-lite-schema.json' -type f -delete && rm -rf site/data/* && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' ! -name 'data' -type f -delete",
    "predeploy:site": "yarn presite",
    "deploy:site": "gh-pages -d site",
    "data": "rsync -r node_modules/vega-datasets/data/* site/data",
    "schema": "mkdir -p build && ts-json-schema-generator -c -f tsconfig.json -p src/index.ts -t TopLevelSpec -k deprecated > build/vega-lite-schema.json && yarn renameschema && cp build/vega-lite-schema.json site/_data/",
    "renameschema": "scripts/rename-schema.sh",
    "presite": "yarn data && yarn schema && yarn build:site && yarn build:versions && scripts/create-example-pages.sh",
    "site": "pushd site && bundle exec jekyll serve -I -l && popd",
    "tsc:src": "tsc -b src/tsconfig.src.json",
    "tsc:site": "tsc -b site/tsconfig.site.json",
    "prettierbase": "prettier '**/*.{md,css,yml}'",
    "eslintbase": "eslint --ext .ts .",
    "format": "yarn eslintbase --fix && yarn prettierbase --write",
    "lint": "yarn eslintbase && yarn prettierbase --check",
    "test": "jest test/ && yarn lint && yarn schema && jest examples/ && yarn test:runtime",
    "test:inspect": "node --inspect-brk ./node_modules/.bin/jest --runInBand test",
    "test:runtime": "TZ=America/Los_Angeles jest test-runtime/",
    "test:runtime:generate": "yarn build:only && rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true yarn test:runtime",
    "watch:build": "yarn build:only && concurrently --kill-others -n Typescript,Rollup 'yarn tsc:src -w' 'rollup -c -w'",
    "watch:site": "concurrently --kill-others -n Typescript,Rollup 'yarn tsc:site -w' 'rollup -c site/rollup.config.js -w'",
    "watch:test": "jest --watch"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vega/vega-lite.git"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/vega/vega-lite/issues"
  },
  "devDependencies": {
    "@commitlint/cli": "^8.3.4",
    "@commitlint/config-conventional": "^8.3.4",
    "@types/chai": "^4.2.7",
    "@types/d3": "^5.7.2",
    "@types/highlight.js": "^9.12.3",
    "@types/jest": "^24.0.25",
    "@types/jest-environment-puppeteer": "^4.3.1",
    "@types/mkdirp": "^0.5.2",
    "@types/puppeteer": "^2.0.0",
    "@typescript-eslint/eslint-plugin": "^2.15.0",
    "@typescript-eslint/parser": "^2.15.0",
    "ajv": "^6.10.2",
    "chai": "^4.2.0",
    "cheerio": "^1.0.0-rc.3",
    "codecov": "^3.6.1",
    "concurrently": "^5.0.2",
    "d3": "^5.15.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-prettier": "^3.1.2",
    "gh-pages": "^2.2.0",
    "highlight.js": "^9.17.1",
    "http-server": "^0.12.0",
    "husky": "^4.0.0",
    "jest": "^24.9.0",
    "jest-puppeteer": "^4.4.0",
    "lint-staged": "^10.0.0",
    "mkdirp": "^0.5.1",
    "prettier": "^1.19.1",
    "puppeteer": "^2.0.0",
    "rollup": "^1.28.0",
    "@rollup/plugin-commonjs": "11.0.1",
    "@rollup/plugin-json": "^4.0.1",
    "@rollup/plugin-node-resolve": "^7.0.0",
    "rollup-plugin-sourcemaps": "^0.5.0",
    "rollup-plugin-terser": "^5.1.3",
    "svg2png-many": "^0.0.7",
    "terser": "^4.6.1",
    "ts-jest": "^24.3.0",
    "ts-json-schema-generator": "0.57.0",
    "typescript": "~3.7.4",
    "vega-cli": "^5.9.0",
    "vega-datasets": "^1.29.0",
    "vega-embed": "^6.2.1",
    "vega-tooltip": "^0.20.0",
    "yaml-front-matter": "^4.1.0"
  },
  "dependencies": {
    "@types/clone": "~0.1.30",
    "@types/fast-json-stable-stringify": "^2.0.0",
    "array-flat-polyfill": "^1.0.1",
    "clone": "~2.1.2",
    "fast-deep-equal": "~3.1.1",
    "fast-json-stable-stringify": "~2.1.0",
    "json-stringify-pretty-compact": "~2.0.0",
    "tslib": "~1.10.0",
    "vega-event-selector": "~2.0.2",
    "vega-expression": "~2.6.3",
    "vega-typings": "~0.12.0",
    "vega-util": "~1.12.1",
    "yargs": "~15.1.0"
  },
  "peerDependencies": {
    "vega": "^5.9.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "git add"
    ],
    "*.{md,css,yml}": [
      "prettier --write",
      "git add"
    ]
  },
  "jest": {
    "preset": "jest-puppeteer",
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules",
      "<rootDir>/build",
      "<rootDir>/_site",
      "<rootDir>/src"
    ],
    "coverageDirectory": "./coverage/",
    "collectCoverage": false
  }
}
