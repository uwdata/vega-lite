#!/usr/bin/env node
'use strict';

/*
 * This script normalizes all the specs in examples/specs and
 * writes the full normalized spec to `examples/specs/normalized`
 * the normalized spec is different than the original.
 * We output this to a different folder so that build-examples script does not generate
 * redundant Vega output specs.
 */

const fs = require('fs');
const vl = require('../build/vega-lite');
const stableStringify = require('fast-json-stable-stringify');

const DIR = __dirname + '/..';
const SPECS = '/examples/specs';
const examples = fs.readdirSync(DIR + SPECS);

async function main() {
  const {default: compactStringify} = await import('json-stringify-pretty-compact');

  const vlExamples = examples.filter(example => example.includes('.vl.json'));
  for (const example of vlExamples) {
    const path = `${DIR + SPECS}/${example}`;
    const spec = JSON.parse(fs.readFileSync(path));

    const preNormalized = stableStringify(spec);
    const fullSpec = vl.normalize(spec);
    const postNormalized = stableStringify(fullSpec);

    // console.log(preNormalized, postNormalized);
    if (preNormalized !== postNormalized) {
      const postNormalizedOutput = compactStringify(fullSpec, {indent: 2});
      // -8 is cutting .vl.json
      const newFilename = example.slice(0, -8) + '_normalized.vl.json';
      const newFilenameAndPath = `${DIR + SPECS}/normalized/${newFilename}`;
      fs.writeFileSync(newFilenameAndPath, postNormalizedOutput);
    }
  }
}

main();
