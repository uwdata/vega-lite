name: Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-matrix:
    name: Node
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12, 14, 15]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - name: Install Node dependencies
        run: yarn --frozen-lockfile

      - name: Tests
        run: yarn jest test/

      - name: Example tests
        run: yarn jest examples/

      - name: Build
        run: yarn build

  build-site:
    name: Build Site
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build:site

  runtime-lint-coverage:
    name: Runtime, Linting, and Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node dependencies
        run: yarn --frozen-lockfile

      - name: Install extra dependencies for Puppeteer
        run: sudo apt-get install libgbm1

      - name: Build
        run: yarn build:only

      - name: Lint
        run: yarn lint

      - name: Runtime tests
        run: yarn test:runtime

      - name: Test coverage
        run: yarn jest test/ --collectCoverage=true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  test-cli:
    name: CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install Node dependencies
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build:only

      - name: Compile Vega
        run: |
          bin/vl2vg examples/specs/bar.vl.json -p > bar.vg.json
          cat bar.vg.json

      - name: Diff compiled Vega
        run: diff bar.vg.json examples/compiled/bar.vg.json

      - name: Compile PNG, SVG, PDF
        run: |
          bin/vl2png examples/specs/bar.vl.json > bar.png
          bin/vl2svg examples/specs/bar.vl.json > bar.svg
          bin/vl2pdf examples/specs/bar.vl.json > bar.pdf

      - name: Compile from stdin (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          bin/vl2vg -p < examples/specs/bar.vl.json > bar-stdin.vg.json
          bin/vl2png < examples/specs/bar.vl.json > bar-stdin.png
          bin/vl2svg < examples/specs/bar.vl.json > bar-stdin.svg
          bin/vl2pdf < examples/specs/bar.vl.json > bar-stdin.pdf
